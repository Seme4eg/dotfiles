;; vars
(defvar show_essid false)
(defvar show_wind false)

;; listeners
(deflisten layout "scripts/layout")
(deflisten backlight "scripts/backlight")
(deflisten volume "scripts/volume")
(deflisten gpu "scripts/gpu")

;; polls
(defpoll updates_count :interval "3600s" "checkupdates | wc -l")
(defpoll steam_running :interval "10s" "pgrep steam | wc -l") ;; for gpu
(defpoll swayidle_status :interval "10000s" "systemctl --user is-active swayidle.service")
;; https://github.com/chubin/wttr.in#one-line-output
;; (defpoll weather :interval "3600s" "curl 'https://wttr.in/Becici?format=j2'") ;; JSON
;;%x for text icon of weather; %f for 'feels like' and %w for wind and arrow-direction
(defpoll weather :interval "3600s" "curl 'https://wttr.in/Becici?format=%t'")
(defpoll wind :interval "3600s" "curl 'https://wttr.in/Becici?format=%w'")

(defpoll bt_status :interval "3s" "~/.config/rofi/scripts/rofi-bt --status")

(defpoll ESSID_WLAN :interval "3s" "nmcli c | grep wlp0s20f3 | awk '{print ($1)}'")
(defpoll vpnstatus :interval "3s" "systemctl is-active openvpn-client@client.service")
(defpoll net :interval "10s"
  :initial 'N/A'
  `nmcli -t -f SIGNAL,ACTIVE device wifi | awk -F':' '{if($2=="yes")print $1}'`)


(defwidget container_right []
  (box
    :class "right_container"
    :halign "end"
    :orientation "h"
    :space-evenly false
    :spacing 13
    (_userinfo)
    ;; TODO: tray
    (_sysinfo)
    (_telemetery)))

;; --- misc block ---

(defwidget _userinfo []
  (box
      :class "user-info"
      :space-evenly false
      :spacing 13
      (_layout)
      (_updates)
      (_weather)))
      

(defwidget _layout []
  (label :width 35 :class "layout" :text "${layout}"))

(defwidget _updates []
  (overlay :class "updates" :width 40
    (label :class "fg" :text "${updates_count}")
    (label :class "bg" :text "")))

(defwidget _weather []
  (eventbox
    :onhover "eww update show_wind=true"
    :onhoverlost "eww update show_wind=false"
    (box
      :class "weather"
      :space-evenly false
      :spacing {show_wind ? 8 : 0}
      :hexpand "false"
      (label :text weather)
      (revealer
        :transition "slideright"
        :reveal show_wind
        :duration "350ms"
        (label :text wind)))))

(defwidget _bt []
  (label :xalign 1 :class "bt" :text "${bt_status}"))


;; --- System info block ---

(defwidget _sysinfo []
  (box :class "sys-info" :space-evenly false :spacing 13
    (_network
      ;; 2 of my laptops have it named differently
      :up {EWW_NET.wlp0s20f3?.NET_UP ?: EWW_NET.wlp2s0.NET_UP}
      :down {EWW_NET.wlp0s20f3?.NET_DOWN ?: EWW_NET.wlp2s0.NET_DOWN})
    (_audioblock)
    (_backlight)
    (_bt)))

(defwidget _network [up down]
  (box :space-evenly false :class "network"
    (revealer
      :reveal {vpnstatus == "active"}
      :spacing {vpnstatus == "active" ? 5 : 0}
      :transition "slideleft"
      (label :width 24 :xalign 0 :class "vpn" :text "󰖂")) ;; 󰖂 / 󰌆
    (eventbox
      :onhover "eww update show_essid=true"
      :onhoverlost "eww update show_essid=false"
      (box
        :space-evenly false
        :spacing {show_essid ? 8 : 0}
        :hexpand "false"
        (overlay :width 35
          (box
            :class "fg"
            :visible {net != ""}
            :orientation "v"
            :valign "center"
            :halign "center"
            :space-evenly false
            (label
              :class {up / 1024 > 1024 ? "bold" : ""}
              :text {up / 1024 < 1024 ?
                        " ${round(up / 1024, 0)}" :
                        " ${round(up / 1048576, 0)}"})
            (progress :value net :width 38 :max 100 :orientation "h")
            (label
              :class {down / 1024 > 1024 ? "bold" : ""}
              :text {down / 1024 < 1024 ?
                     " ${round(down / 1024, 0)}" :
                     " ${round(down / 1048576, 0)}"}))
          (label :class "disconnected" :text {net == "" ? "󰤮" : ""}))
        (revealer
          :class "essid"
          :transition "slideright"
          :reveal show_essid
          :duration "350ms"
          (label :class "essid" :text ESSID_WLAN))))))

(defwidget _audioblock []
  (box :class "audio" :space-evenly false
    (label
      :class "volume"
      :text {volume.is_vol_muted == "true" ? "󰖁" :
             volume.vol_level < 20 ? "󰕿${volume.vol_level}" :
             volume.vol_level < 50 ? "󰖀${volume.vol_level}" :
             "󰖀${volume.vol_level}"} ;; 󰕾
      :angle 90)
    (progress
      :class {volume.is_vol_muted ? "muted" : ""}
      :value {volume.vol_level}
      :max 100
      :orientation "v"
      :flipped "true"
      :halign "center")
    (progress
      :class {volume.is_mic_muted ? "muted" : ""}
      :value {volume.mic_level}
      :max 100
      :orientation "v"
      :flipped "true"
      :halign "center")
    (label
      :class "mic"
      :angle 270
      :xalign 1
      :text {volume.is_mic_muted == "true" ? "󰍭" : "${volume.mic_level}󰍬"})))
    
(defwidget _backlight []
  ;; eww is started with soystemd so it doesn't know about my local/bin and i
  ;; don't want to pass it there, that's why hardcoded path
  (eventbox :onclick "sh /home/earthian/.local/bin/toggle-idling"
    (overlay :class "backlight" :width 31
      (circular-progress
        :value backlight
        :start-at 0
        :thickness 3
        :clockwise true)
      (label
        :class "circle-text yes"
        :text {swayidle_status == 'active' ? "󰃝" : ""}))))

;; --- telemetery block ---

(defwidget _telemetery []
  (box :class "telemetery" :space-evenly false :spacing 15
    (_revealer
      :revealvar {steam_running != 0}
      :spacing {steam_running != 0 ? 8 : 0}
      (_graph :type "CPU")
      (_graph :type "GPU"))
    (_mem)
    (_battery :capacity {EWW_BATTERY.BAT0.capacity})))

(defwidget _mem []
  (overlay :class "memory" :width 31
    (circular-progress
      :value {EWW_RAM.used_mem_perc}
      :start-at 0
      :thickness 3
      :clockwise true)
    (label :class "circle-text" :text "󰍛")))

(defwidget _battery [capacity]
  (label
    :class {EWW_BATTERY.BAT0.status == 'Charging' ? "bat charging" :
             EWW_BATTERY.BAT0.capacity < 15 ? "bat low" : "bat"}
    :text "${EWW_BATTERY.BAT0.capacity}󱐋"))
