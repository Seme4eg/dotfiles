(include "./left.yuck")
(include "./center.yuck")
(include "./right.yuck")

(defvar theme "dark")

(defwindow topbar
  :monitor 0
  :geometry (geometry
              :x "0%"
              :y "0%"
              :width "100%"
              :height "30px"
              :anchor "top center")
  :stacking "fg"
  ;; :exclusive true
  (main_container)) ;; is it possible to pass several widgets to window?

(defwidget main_container []
  (centerbox
    :class "container_main ${theme}" ;; add 'slim' to make status bar 'slim'
    :orientation "h"
    (container_left)
    (container_center)
    (container_right)))
    
;; https://github.com/druskus20/eugh/blob/master/revealer-example/eww.yuck
;; ↑ this helped to figure out how to use revealer properly.

;; Revealer using children
(defwidget _revealer [revealvar ?class ?spacing ?duration ?transition]
  (box :space-evenly false :spacing {spacing ?: 0} :class {class}
    (children :nth 0)
    (revealer
      :reveal revealvar
      :transition {transition ?: "slideright"}
      :duration {duration ?: "500ms"}
      (children :nth 1))))

;; used type gpu and cpu info, 'type' can be either CPU or GPU
(defwidget _graph [type]
  (box :orientation "v" :spacing 0 :class type
    (box :valign "start" :class "temp-text"
      (label :xalign 0 :text type)
      (label
        :class "temp-value"
        :xalign 1
        :text "${type == "CPU" ? EWW_TEMPS.ACPITZ_TEMP1 : gpu.temp}°"))
    (overlay
      (graph :class "load"
        :value {type == "CPU" ? EWW_CPU.avg : gpu.load}
        :thickness 2
        :width 55
        :time-range {type == "CPU" ? "30s" : "1m"}
        :max 100
        :line-style "round")
      (graph :class "temp"
        :value {type == "CPU" ? EWW_TEMPS.ACPITZ_TEMP1 : gpu.temp}
        :thickness 2
        :width 55
        :time-range {type == "CPU" ? "30s" : "1m"}
        :min {type == "CPU" ? 40 : 35}
        :max {type == "CPU" ? 120 : 100}
        :line-style "round"))))
