# Config example (also default values)

# permanently set alternative root dir. Use ":" to separate multiple roots
# which can be switched at runtime with corresponding hotkeys
ROOTS=~/.password-store:~/teststore

# You can define password store env vars here and they will be sourced in
# the script and applied to all pass commands called. Like:
# PASSWORD_STORE_CLIP_TIME=30
# PASSWORD_STORE_GENERATED_LENGTH=13

# Same way you can define other env vars that pass is using:
EDITOR='emacsclient -c'

# Fields to be used
URL_FIELD='url'
USERNAME_FIELD='user'
AUTOTYPE_FIELD='autotype'
OTPMETHOD_FIELD='otp_method'

BACK_OPTION='< back'

# delay to be used for :delay keyword
delay=2
# rofi-pass needs to close itself before it can type passwords. Set delay here.
wait=0.2
# delay between keypresses when typing (in ms)
type_delay=12


## Options for generating new password entries
# open new password entries in editor
edit_new_pass="false"
default_user=":basename"
default_user2=""
password_length=12

## Misc settings

default_autotype="user :tab pass"
auto_enter='false'
notify='true'

# default shortcuts
help="Alt+h"

type_menu="Alt+t"
type_pass="Alt+3"
type_user="Alt+2"
type_otp="Alt+5"
autotype="Alt+1"

copy_menu="Alt+c"
copy_pass="Alt+p"
copy_name="Alt+u"
copy_url="Alt+l"

insert_pass="Alt+n"
show="Alt+o"
action_menu="Alt+a"

open_url="Alt+4"
qrcode="Alt+q"
previous_root="Shift+Left"
next_root="Shift+Right"

# --- Functions you can redefine ---
# rofi command. Make sure to have "$@" as last argument
# _rofi () {
# 	rofi -no-auto-select -i -dmenu "$@"
# }

# image viewer to display qrcode of selected entry
# qrencode is needed to generate the image and a viewer
# that can read from pipes. Known viewers to work are feh and display
# _image_viewer () {
#     feh -
# #    display
# }

# wrapper for notify command, used if 'notify' option is set to 'true'
_notify () {
  say -e "$1"
}
