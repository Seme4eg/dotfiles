#+title: Arch

** Installation
- follow official arch installation guide
- disk partitioning -> see the child header below
- on pacstrap step i did: ~pacstrap -K /mnt base base-devel linux linux-firmware
  linux-headers sof-firmware networkmanager vim man-db man-pages texinfo
  intel-ucode~
- ...
- bootloader step:
  - pacman -S grub efibootmgr
  - grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=grub
  - grub-mkconfig -o /boot/grub/grub.cfg
- *after reboot*:
  - systemctl enable --now NetworkManager -> nmtui
  - pacman -S zsh fzf wget zoxide
  - useradd -m -G wheel -s /bin/zsh earthian
  - passwd earthian
  - ~EDITOR=vim visudo~ -> uncomment wheel
  - *FROM NOW ON DO THINGS ONLY AS NORMAL USER, NOT SU*
  - (!) [[https://wiki.archlinux.org/title/Users_and_groups#Pre-systemd_groups][pre-systemd groups]] <- no need to usermod video, audio, power etc, if
    something won't work go to 'udev' page from this link
  - ~make install~
  - setup [[*gpg][gpg]]
  - ~make postinstall~

*** Partition the disks
- check your disks sda's / nvme's: ~lsblk~ or ~fdisk -l~. (Results ending in rom,
  loop or airoot may be ignored.)

**** Using fdisk
- ~p~ - list all partitions that u currently have
- ~g~ - create new gpt-partition table (or ~d~ to delete particular ones)
- ~n[ew]~ -> 1 (default) -> 2048 (default) -> +1G (efi partition) (tho wiki
  recommends +512M)
- ~n~ -> 3x enter (root partition)
- ~t[ype]~ -> 1st partition (efi one) -> l[ist] to get all available types ->
  choose EFI system
- set root partition type to /Linux filesystem/
- ~p~ -> check which partitions you ended up with
- ~w[rite]~ if everything is as u want

** sound
If there's no sound, maybe you've several sound cards and default one got set
incorrectly, then create ~/.asoundrc to change default sound card:
#+begin_src
defaults.ctl.card 1
defaults.pcm.card 1
#+end_src

: man pactl

If your soundcard doens't correctly detect microphone plugged in a 4-pin 3.5mm
(TRRS) jack, find your soundcard name (easy to do using alsamixer) and go
[[https://wiki.archlinux.org/title/Advanced_Linux_Sound_Architecture#Correctly_detect_microphone_plugged_in_a_4-pin_3.5mm_(TRRS)_jack][research]]. (Maybe you just need to switch to in in pavucontrol..). Just examples
of what previously worked for me on different machines (file
=/etc/modprobe.d/alsa-base.conf=):
- options snd-sof-intel-hda-common hda_model=alc298-dell-aio
- options snd-hda-intel model=alc298-dell-aio
- options snd-hda-intel model=dell-headset-multi

- switch default mic to the one on your headphones cuz notebook mic is
  usually crap: ~wpctl status~ - grab id of your mic (SOURCE device) - ~wpctl
  set-default ...~

When encountering problems with sound: ~/usr/bin/rm -r
~/.local/state/wireplumber/~, ~scur wireplumber.service~

** hyprland
*Nvidia* setup: *DO NOT FOLLOW HYPRLAND WIKI* yet, first try to install just normal,
proprietary =nvidia= package, do not add anything in grub conf or mkinitcpio, JUST
TRY TO LAUNCH IT WITH NVIDIA (using ~starthl~ ofc). If it runs, then enable drm in
grub conf and you're done.

# GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 quiet nvidia_drm.modeset=1"

there are 2 checks in aliases, 1st one should show 2 vda things, on your gpu the
'driver' field must show NOT nouveau, if it does - check both modprobes if those
are blocking nouveau and if they don't - add block rule and regenerate modprobe.

** gpg
- copy secret2.gpg from wherever you have it stored and run ~gpg --import
  secret2.gpg~
- set *trust* level with ~gpg --edit-key <KEY_ID>~ -> gpg> trust -> 5 -> y
- ~make pass~

** fingerprint sensor
https://wiki.archlinux.org/title/fprint

my xiaomi notebook pro x 2021 fingerprint sensor won't prob ever b supported
tho: https://gitlab.freedesktop.org/libfprint/wiki/-/wikis/Unsupported-Devices

xiaomi 2016 has a supported fprint sensor but enrolled prints never match.. so
the whole fprint thing to me appeared as unreliable.

